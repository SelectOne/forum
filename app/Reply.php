<?php

namespace App;

use App\Traits\Favoritable;
use App\Traits\RecordsActivity;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;

class Reply extends Model
{
    use Favoritable, RecordsActivity;

    protected $guarded = [];

    protected $with = ['favorites', 'owner'];

    protected $appends = ['favoritesCount', 'isFavorited', 'isBest'];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        // 创建评论时评论总数+1
        static::created(function ($reply) {
            $reply->thread->increment('replies_count');
            $reply->body = clean($reply->body,'thread_or_reply_body');
        });

        static::deleted(function ($reply) {
            // 删除评论时评论总数-1
            $reply->thread->decrement('replies_count');

            // 删除最佳评论时设置评论best_reply_id属性为null
            if($reply->id == $reply->thread->best_reply_id){
                $reply->thread->update(['best_reply_id' => null]);
            }
        });
    }

    public function path()
    {
        return $this->thread->path(). "#reply-{$this->id}";
    }

    public function setBodyAttribute($body)
    {
        $this->attributes['body'] = preg_replace('/@([\w\-]+)/','<a href="/profiles/$1">$0</a>',$body);
    }

    public function getIsBestAttribute()
    {
        return $this->isBest();
    }

    public function owner()
    {
        return $this->belongsTo(User::class,'user_id');  // 使用 user_id 字段进行模型关联
    }

    public function thread()
    {
        return $this->belongsTo(Thread::class);
    }

    /**
     * 判断回复是否刚刚发布
     * @return mixed
     */
    public function wasJustPublished()
    {
        return $this->created_at->gt(Carbon::now()->subMinute());
    }

    /**
     * 获取@某人的用户名
     * @return mixed
     */
    public function mentionedUsers()
    {
        preg_match_all('/@([\w\-]+)/',$this->body,$matches);

        return $matches[1];
    }

    public function isBest()
    {
        return $this->thread->best_reply_id == $this->id;
    }
}
